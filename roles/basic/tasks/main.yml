---
- name: 'Update repositories and upgrade system'
  ansible.builtin.apt:
    name: "*"    
    state: latest
    update_cache: yes
    allow_downgrade: yes
  become: true

- name: 'Change Max user Watches'
  sysctl:
      name: fs.inotify.max_user_watches
      value: 1024288
      state: present
  become: true

- name: 'Basic: Add PPAs'
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
  with_items:
    - "ppa:aslatter/ppa"  # Alacritty
  when: ansible_distribution == "Ubuntu"
  become: true

- name: 'Install Flatpak'
  ansible.builtin.apt:
    name: flatpak
    state: latest
  become: true

- name: 'Add the flathub flatpak repository remote to the user installation'
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user

- name: 'Install apps'
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - vlc
    - gimp
    - gparted
    - synaptic
    - playerctl
    - ubuntu-restricted-extras
    - preload
    - alacarte
    - gnome-tweak-tool
    - apt-transport-https
    - ca-certificates 
    - curl
    - software-properties-common
    - fonts-firacode
    - fonts-cascadia-code
    - fonts-ibm-plex
    - fonts-noto-extra
    - build-essential
    - gcc
    - powerline
    - alacritty
    - network-manager-openvpn-gnome
    - flameshot
    - peek
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_version == "20.04") or
        (ansible_distribution == "Pop!_OS" and ansible_distribution_version == "20.04")
  become: true

- name: 'Install apps'
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - vlc
    - gimp
    - gparted
    - synaptic
    - playerctl
    - ubuntu-restricted-extras
    - preload
    - alacarte
    - gnome-tweaks
    - apt-transport-https
    - ca-certificates 
    - curl
    - software-properties-common
    - fonts-firacode
    - fonts-cascadia-code
    - fonts-ibm-plex
    - fonts-noto-extra
    - build-essential
    - gcc
    - powerline
    - alacritty
    - network-manager-openvpn-gnome
    - flameshot
    - peek
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_version == "21.10") or
        (ansible_distribution == "Pop!_OS" and ansible_distribution_version == "21.10")
  become: true

- name: 'Install Dell OEM package'
  ansible.builtin.apt:
    name: oem-somerville-bulbasaur-meta
    state: latest
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_version == "20.04") or
        (ansible_distribution == "Pop!_OS" and ansible_distribution_version == "20.04")
  become: true

- name: 'Update packages to install OEM Dell XPS packages and kernel'
  ansible.builtin.apt:
    name: "*"    
    state: latest
    update_cache: yes
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_version == "20.04") or
        (ansible_distribution == "Pop!_OS" and ansible_distribution_version == "20.04")
  become: true

- name: 'Install Obinskit'
  ansible.builtin.apt:
    deb: https://s3.hexcore.xyz/occ/linux/deb/ObinsKit_1.2.11_x64.deb
    state: present
  environment:
    DEBIAN_FRONTEND: noninteractive
  become: true

- name: 'Install flatpak apps'
  community.general.flatpak:
      name: "{{ item }}"
      method: user
      state: present
  with_items:
    - com.bitwarden.desktop
    - com.github.tchx84.Flatseal
    - com.spotify.Client
    - com.transmissionbt.Transmission
    - com.valvesoftware.Steam
    - org.gtk.Gtk3theme.Pop-dark
    - org.telegram.desktop

- name: 'Install Nerd Fonts'
  ansible.builtin.script: 'files/install-nerd-fonts.sh'
  become: true
  become_method: sudo

- include_tasks: exa.yml
